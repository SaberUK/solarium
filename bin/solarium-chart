#!/usr/bin/env ruby
# Solarium (C) 2017 Peter "SaberUK" Powell <petpow@saberuk.com>

APP_ROOT = File.dirname __dir__
if Dir.exist? "#{APP_ROOT}/.git"
	$LOAD_PATH.unshift "#{APP_ROOT}/lib"
end

%w(solarium trollop).each do |lib|
	begin
		require lib
	rescue ::Exception => error
		STDERR.puts "A fatal error was encountered whilst loading #{lib}:"
		STDERR.puts "#{error.class}: #{error.message}"
		exit 1
	end
end

APP_NAME = File.basename $PROGRAM_NAME
options = Trollop::options do
	banner "Usage: #{APP_NAME} [OPTIONS]"
	version Solarium::VERSION

	opt :chart_format, 'The output format to use for chart generation', default: 'dygraph'
	opt :database_url, 'The URL for connecting to the SQL database', default: 'sqlite://solarium.sq3'
	opt :include_days, 'The number of days to include in the chart', default: 30
	opt :output_dir, 'The directory to write generated charts to', default: "#{Dir.pwd}/solarium-chart"
end

Trollop::die :database_url, 'is not a valid URL' unless options[:database_url] =~ /^#{URI.regexp}$/
Trollop::die :include_days, 'is not a valid day count' unless options[:include_days] > 0

begin
	name = options[:chart_format].downcase
	require "solarium/#{name}/#{name}"
rescue ::Exception => error
	STDERR.puts "A fatal error was encountered whilst loading the #{name} module:"
	STDERR.puts "#{error.class}: #{error.message}"
	exit 1
end

database = Solarium::Database.new options[:database_url]
unless database.error.nil?
	STDERR.puts "A fatal error was encountered whilst connecting to the database:"
	STDERR.puts "#{database.error.class}: #{database.error.message}"
	exit 1
end

data = database.select_days options[:include_days]
Solarium::Chart.generate options[:output_dir], data
